{"version":3,"file":"index.js","sources":["../../src/index.tsx"],"sourcesContent":["import { createEffect, For, JSX, JSXElement, onCleanup, onMount, Setter, splitProps } from \"solid-js\";\nimport SortableJs from \"sortablejs\";\n\nexport type SortableEvent = SortableJs.SortableEvent\ninterface SortableProps<T> extends SortableJs.Options {\n  items: T[];\n  setItems: Setter<T[]>;\n  idField: keyof T;\n  class?: string;\n  style?: JSX.CSSProperties;\n  id?: string;\n  children: (item: T) => JSXElement;\n}\n\nconst SORTABLE_OPTION_FIELDS = ([\n  'animation', 'chosenClass', 'dataIdAttr', 'delay', 'delayOnTouchOnly', 'direction', 'disabled', 'dragClass', 'draggable', 'dragoverBubble', 'dropBubble', 'easing',\n  'fallbackClass', 'fallbackOffset', 'fallbackOnBody', 'fallbackTolerance', 'filter', 'forceFallback', 'ghostClass', 'group', 'handle', 'ignore',\n  'invertedSwapThreshold', 'invertSwap', 'onAdd', 'onChange', 'onChoose', 'onClone', 'onEnd', 'onFilter',\n  'onMove', 'onRemove', 'onSelect', 'onSort', 'onStart', 'onUnchoose', 'onUpdate', 'preventOnFilter', 'removeCloneOnHide', 'setData', 'sort', 'swapThreshold',\n] as const) satisfies readonly (keyof SortableJs.Options)[]\n// Would love to type-check if all fields are present, but that seems rather challenging - https://stackoverflow.com/questions/58167616/typescript-create-an-exhaustive-tuple-type-from-another-type/58170994#58170994\n\nconst OUR_PROPS = (['items', 'setItems', 'idField', 'class', 'style', 'id', 'children'] as const) satisfies readonly (Exclude<keyof SortableProps<any>, keyof SortableJs.Options>)[]\n\n\nconst dragging = {\n  item: undefined as any,\n};\nexport default function Sortable<T>(props: SortableProps<T>) {\n  let sortableContainerRef: HTMLDivElement | undefined;\n  let sortable: SortableJs\n\n  const [options, otherAndOurProps] = splitProps(props, SORTABLE_OPTION_FIELDS)\n  const [ourProps, otherProps] = splitProps(otherAndOurProps, OUR_PROPS)\n\n  onMount(() => {\n    sortable = SortableJs.create(sortableContainerRef!, {\n      ...options,\n      animation: 150,\n      onStart(event) {\n        dragging.item = ourProps.items[parseInt(event.item.dataset.index!)];\n        options.onStart?.(event);\n      },\n      onAdd(event) {\n        const children = [...event.to?.children!] as HTMLSpanElement[];\n        const newItems = children.map(\n          (v) =>\n            ourProps.items.find(\n              (item) => (item[ourProps.idField] as string).toString() === v.dataset.id!,\n            ) || dragging.item,\n        );\n        // from: where it came from\n        // to:   added to\n        children.splice(event.newIndex!, 1);\n        event.to?.replaceChildren(...children);\n\n        ourProps.setItems(newItems as T[]);\n        options.onAdd?.(event)\n      },\n      onRemove(event) {\n        // from: where it removed from\n        // to: where it added to\n        const children = [...event.from?.children!] as HTMLSpanElement[];\n        const newItems = children.map((v) =>\n          ourProps.items.find((item) => (item[ourProps.idField] as string).toString() === v.dataset.id!),\n        );\n\n        children.splice(event.oldIndex!, 0, event.item);\n        event.from.replaceChildren(...children);\n        ourProps.setItems(newItems as T[]);\n        options.onRemove?.(event);\n      },\n      onEnd(event) {\n        const children = [...sortableContainerRef?.children!] as HTMLSpanElement[];\n        const newItems = children.map((v) =>\n          ourProps.items.find((item) => (item[ourProps.idField] as string).toString() === v.dataset.id!),\n        );\n        children.sort((a, b) => parseInt(a.dataset.index!) - parseInt(b.dataset.index!));\n        sortableContainerRef?.replaceChildren(...children);\n        ourProps.setItems(newItems as T[]);\n        dragging.item = undefined;\n        options.onEnd?.(event);\n      },\n    });\n    // console.debug(\"Sortable created:\", sortable)\n\n    onCleanup(() => {\n      sortable.destroy();\n    });\n  });\n\n  createEffect<Pick<SortableProps<T>, ArrayToUnion<typeof SORTABLE_OPTION_FIELDS>> | null>((prev) => {\n    const clonedProps = { ...options }\n    if (!prev) {\n      //console.debug('props init', clonedProps)\n    } else {\n      const diff = Object.entries(clonedProps).filter(([key, newVal]) => newVal != prev[key as keyof Pick<SortableProps<T>, ArrayToUnion<typeof SORTABLE_OPTION_FIELDS>>])\n      //console.debug('props update', diff, { newProps: clonedProps, prev })\n      for (const [key, newVal] of diff) {\n        if (['onStart', 'onAdd', 'onRemove', 'onEnd'].includes(key))\n          console.warn(`Reactive callbacks are not supported yet in solid-sortablejs. Changed:`, key)\n        else\n          sortable.option(key as keyof Pick<SortableProps<T>, ArrayToUnion<typeof SORTABLE_OPTION_FIELDS>>, newVal)\n      }\n    }\n    return clonedProps\n  }, null);\n\n  return (\n    <div {...otherProps} ref={sortableContainerRef} class={\"sortablejs\" + (ourProps.class ? ` ${ourProps.class}` : '')}>\n      <For each={ourProps.items}>\n        {(item, i) => (\n          <div data-id={item[ourProps.idField]} data-index={i()}>\n            {ourProps.children(item)}\n          </div>\n        )}\n      </For>\n    </div>\n  );\n}\n\ntype ArrayToUnion<T extends readonly string[]> = T[number];\n\n"],"names":["SORTABLE_OPTION_FIELDS","OUR_PROPS","dragging","item","undefined","Sortable","props","sortableContainerRef","sortable","options","otherAndOurProps","splitProps","ourProps","otherProps","onMount","SortableJs","create","animation","onStart","event","items","parseInt","dataset","index","onAdd","children","to","newItems","map","v","find","idField","toString","id","splice","newIndex","replaceChildren","setItems","onRemove","from","oldIndex","onEnd","sort","a","b","onCleanup","destroy","createEffect","prev","clonedProps","diff","Object","entries","filter","key","newVal","includes","console","warn","option","_el$","_tmpl$","_ref$","_$use","_$spread","_$mergeProps","class","_$insert","_$createComponent","For","each","i","_el$2","_$effect","_p$","_v$","_v$2","_$setAttribute"],"mappings":"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"}